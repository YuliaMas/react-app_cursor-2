{"version":3,"sources":["contacts/contact.js","contacts/contacts.js","App.js","serviceWorker.js","index.js"],"names":["Contact","props","firstName","lastName","phone","gender","contacts","setIcon","str","icon","Contacts","state","sort","a","b","filtered","search","isMale","isFemale","isUnknown","handleSearchChange","event","setState","target","value","filter","contact","toLowerCase","includes","handleCheckboxChange","female","document","getElementById","male","unknown","checked","undefined","className","id","this","type","defaultChecked","name","onChange","placeholder","bind","map","length","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6VAWeA,EATC,SAACC,GAAD,OACZ,4BACC,4BAAKA,EAAMC,WACX,4BAAKD,EAAME,UACX,4BAAKF,EAAMG,OACX,4BAAKH,EAAMI,UCHVC,G,MAAW,CAAC,CACjBJ,UAAW,uCACXC,SAAU,2EACVC,MAAO,gBACPC,OAAQ,QACN,CACFH,UAAW,iCACXC,SAAU,+DACVC,MAAO,gBACPC,OAAQ,UACN,CACFH,UAAW,yDACXC,SAAU,mDACVC,MAAO,iBACL,CACFF,UAAW,iCACXC,SAAU,mDACVC,MAAO,gBACPC,OAAQ,UACN,CACFH,UAAW,uCACXC,SAAU,yDACVC,MAAO,gBACPC,OAAQ,QACN,CACFH,UAAW,uCACXC,SAAU,6CACVC,MAAO,gBACPC,OAAQ,UAGT,SAASE,EAAQC,GAChB,IAAIC,EAAO,GAKT,MAJS,SAARD,EACFC,EAAO,eACU,WAARD,IACTC,EAAO,gBACCA,E,IAGWC,E,4MACpBC,MAAQ,CACPL,SAAS,YAAKA,EAASM,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEV,SAAWW,EAAEX,SAAY,GAAK,MACvEY,SAAS,GAAD,OAAMT,GACdU,OAAQ,GACRC,QAAQ,EACRC,UAAU,EACVC,WAAW,G,EAGZC,mBAAqB,SAACJ,EAAQK,GAAW,IAAD,EACvC,EAAKC,UAAL,mBACEN,EAASK,EAAME,OAAOC,OADxB,qCAEelB,EAASmB,QAAO,SAACC,GAC9B,OACEA,EAAQxB,UAAUyB,cAAcC,SAASP,EAAME,OAAOC,MAAMG,gBAC5DD,EAAQvB,SAASwB,cAAcC,SAASP,EAAME,OAAOC,MAAMG,gBAC3DD,EAAQtB,MAAMuB,cAAcC,SAASP,EAAME,OAAOC,MAAMG,oBAN5D,K,EAaDE,qBAAuB,WACtB,IAAMC,EAASC,SAASC,eAAe,UACjCC,EAAOF,SAASC,eAAe,QAC/BE,EAAUH,SAASC,eAAe,WAExC,EAAKV,UAAS,WAKb,MAAO,CAAChB,SAJa,EAAKK,MAAMI,SAASU,QAAO,SAAAC,GAAO,MAChC,SAAnBA,EAAQrB,QAAsB4B,EAAKE,SAChB,WAAnBT,EAAQrB,QAAwByB,EAAOK,cACpBC,IAAnBV,EAAQrB,QAAyB6B,EAAQC,gB,uDAM9C,OACG,yBAAKE,UAAU,oBACd,0BAAMA,UAAU,UACf,+BAAO,2BAAOC,GAAG,SAASd,MAAOe,KAAK5B,MAAMO,SAAUsB,KAAK,WAAWC,gBAAc,EAACC,KAAK,SAASC,SAAUJ,KAAKV,uBAAlH,UACA,+BAAO,2BAAOS,GAAG,OAAQd,MAAOe,KAAK5B,MAAMM,OAAQyB,KAAK,OAAOF,KAAK,WAAWC,gBAAc,EAACE,SAAUJ,KAAKV,uBAA7G,QACA,+BAAO,2BAAOS,GAAG,UAAWd,MAAOe,KAAK5B,MAAMQ,UAAWuB,KAAK,UAAUF,KAAK,WAAYC,gBAAc,EAACE,SAAUJ,KAAKV,uBAAvH,aACA,+BAAO,2BAAOW,KAAK,OAAQI,YAAY,YAAYpB,MAAOe,KAAK5B,MAAMK,OAAQ2B,SAAUJ,KAAKnB,mBAAmByB,KAAKN,KAAM,cAE3H,+BACC,6CACA,+BACA,4BACC,0CACA,yCACA,qCACA,wCAGD,+BACEA,KAAK5B,MAAML,SAASwC,KAAI,SAACpB,GACzB,OACE,kBAAC,EAAD,CACExB,UAAWwB,EAAQxB,UACnBC,SAAWuB,EAAQvB,SACnBC,MAAOsB,EAAQtB,MACfC,OAAQE,EAAQmB,EAAQrB,cAM9B,+BACA,4BACC,yCAAekC,KAAK5B,MAAML,SAASyC,gB,GAxELC,aC9BvBC,E,uKAPX,OACI,yBAAKZ,UAAU,OACb,kBAAE,EAAF,W,GAJQW,aCOEE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF1B,SAASC,eAAe,SDyHpB,kBAAmB0B,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.0689e837.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Contact = (props) => (\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>{props.firstName}</td>\r\n\t\t\t\t\t<td>{props.lastName}</td>\r\n\t\t\t\t\t<td>{props.phone}</td>\r\n\t\t\t\t\t<td>{props.gender}</td>\r\n\t\t\t\t</tr>\r\n)\r\n\r\nexport default Contact;","import React, {Component} from \"react\";\r\nimport Contact from \"./contact\";\r\nimport \"./contact.css\";\r\n\r\nconst contacts = [{\r\n\tfirstName: \"Барней\",\r\n\tlastName: \"Стинсовський\",\r\n\tphone: \"+380956319521\",\r\n\tgender: \"male\"\r\n}, {\r\n\tfirstName: \"Робін\",\r\n\tlastName: \"Щербатська\",\r\n\tphone: \"+380931460123\",\r\n\tgender: \"female\"\r\n}, {\r\n\tfirstName: \"Анонімний\",\r\n\tlastName: \"Анонімус\",\r\n\tphone: \"+380666666666\"\r\n}, {\r\n\tfirstName: \"Лілія\",\r\n\tlastName: \"Олдровна\",\r\n\tphone: \"+380504691254\",\r\n\tgender: \"female\"\r\n}, {\r\n\tfirstName: \"Маршен\",\r\n\tlastName: \"Еріксонян\",\r\n\tphone: \"+380739432123\",\r\n\tgender: \"male\"\r\n}, {\r\n\tfirstName: \"Теодор\",\r\n\tlastName: \"Мотсбес\",\r\n\tphone: \"+380956319521\",\r\n\tgender: \"male\"\r\n}];\r\n\r\nfunction setIcon(str) {\r\n\tlet icon = \"\";\r\n\tif(str === 'male') {\r\n\t\ticon = \"👨\";\r\n\t} else if(str === 'female') {\r\n\t\ticon = \"👩\";\r\n\t} return icon\r\n\t}\r\n\r\nexport default class Contacts extends Component {\r\n\tstate = {\r\n\t\tcontacts: [...contacts.sort((a, b) => (a.lastName > b.lastName) ? 1 : -1)],\r\n\t\tfiltered: [...contacts],\r\n\t\tsearch: \"\",\r\n\t\tisMale: true,\r\n\t\tisFemale: true,\r\n\t\tisUnknown: true,\r\n\t}\r\n\r\n\thandleSearchChange = (search, event) => {\r\n\t\tthis.setState({\r\n\t\t\t[search]: event.target.value,\r\n\t\t\tcontacts: [...contacts.filter((contact) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t\tcontact.firstName.toLowerCase().includes(event.target.value.toLowerCase())||\r\n\t\t\t\t\t\tcontact.lastName.toLowerCase().includes(event.target.value.toLowerCase()) ||\r\n\t\t\t\t\t\tcontact.phone.toLowerCase().includes(event.target.value.toLowerCase())\r\n\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t})\r\n\t}\r\n\r\n\thandleCheckboxChange = () => {\r\n\t\tconst female = document.getElementById(\"female\");\r\n\t\tconst male = document.getElementById(\"male\");\r\n\t\tconst unknown = document.getElementById(\"unknown\");\r\n\r\n\t\tthis.setState(() => {\r\n\t\t\tconst filterGender = this.state.filtered.filter(contact =>\r\n\t\t\t\t\t((contact.gender === 'male') && male.checked) ||\r\n\t\t\t\t\t((contact.gender === 'female') && female.checked) ||\r\n\t\t\t\t\t((contact.gender === undefined) && unknown.checked))\r\n\t\t\treturn {contacts: filterGender}\r\n\t\t\t});\r\n\t\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t\t\t<div className=\"contacts-wrapper\">\r\n\t\t\t\t\t\t<form className=\"search\">\r\n\t\t\t\t\t\t\t<label><input id=\"female\" value={this.state.isFemale} type=\"checkbox\" defaultChecked name=\"female\" onChange={this.handleCheckboxChange}/>female</label>\r\n\t\t\t\t\t\t\t<label><input id=\"male\"  value={this.state.isMale} name=\"male\" type=\"checkbox\" defaultChecked onChange={this.handleCheckboxChange} />male</label>\r\n\t\t\t\t\t\t\t<label><input id=\"unknown\"  value={this.state.isUnknown} name=\"unknown\" type=\"checkbox\"  defaultChecked onChange={this.handleCheckboxChange} />anonymous</label>\r\n\t\t\t\t\t\t\t<label><input type=\"text\"  placeholder=\"Search...\" value={this.state.search} onChange={this.handleSearchChange.bind(this, 'search')}/></label>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t<table>\r\n\t\t\t\t\t\t\t<caption>Contacts</caption>\r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th>First name</th>\r\n\t\t\t\t\t\t\t\t<th>Last name</th>\r\n\t\t\t\t\t\t\t\t<th>Phone</th>\r\n\t\t\t\t\t\t\t\t<th>Gender</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t{this.state.contacts.map((contact) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<Contact\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfirstName={contact.firstName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlastName ={contact.lastName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tphone={contact.phone}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tgender={setIcon(contact.gender)}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t<tfoot>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>Contacts: {this.state.contacts.length}</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</tfoot>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n","import React, {Component} from 'react';\nimport './contacts/normalize.css';\nimport './App.css';\nimport Contacts from \"./contacts/contacts\";\n\nclass App extends Component{\n  render() {\n    return (\n        <div className=\"App\">\n          < Contacts />\n        </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}